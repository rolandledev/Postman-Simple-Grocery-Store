{
	"info": {
		"_postman_id": "7c82a35f-17ce-42ef-b3f1-41e3a8979c29",
		"name": "Simple Grocery Store API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24485618",
		"_collection_link": "https://cloudy-sunset-469689.postman.co/workspace/Projet~f40a76ae-7b8c-4b18-8987-3e5dc82b4a82/collection/24485618-7c82a35f-17ce-42ef-b3f1-41e3a8979c29?action=share&source=collection_link&creator=24485618"
	},
	"item": [
		{
			"name": "Status",
			"item": [
				{
					"name": "Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"VÃ©rification Status = UP\", function () {\r",
									"    pm.expect(responseJson.status).equals(\"UP\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API Authentication",
			"item": [
				{
					"name": "Authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Register a new API Client\", function() {\r",
									"    pm.expect(pm.response.code).eq(201);\r",
									"});\r",
									"\r",
									"pm.test(\"API client already registered\", function() {\r",
									"    pm.expect(pm.response.code).eq(409);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"clientName\" : \"Groupe 2\",\r\n    \"clientEmail\" : \"groupe2@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api-clients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-clients"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get all products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get all orders status code\", function() {\r",
									"    pm.expect(pm.response.code).eq(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Le produit 1225 est 1/2 in. Brushless Hammer Drill\", function () {\r",
									"    pm.expect(responseJson.name).equals(\"1/2 in. Brushless Hammer Drill\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/products/1225",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products",
								"1225"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cart",
			"item": [
				{
					"name": "Create a new cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"myCartId\", pm.response.json().cartId);\r",
									"\r",
									"pm.test(\"code retour = 201\",function() {\r",
									"    \r",
									"        pm.expect(pm.response.code).eq(201);\r",
									"           \r",
									"    }\r",
									");\r",
									"\r",
									"pm.test(\"Created = true in the response \",function() {\r",
									"    \r",
									"        pm.expect(pm.response.json().created).equals(true);        \r",
									"    }\r",
									");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carts/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get a cart status code=200\", function() {\r",
									"    pm.expect(pm.response.code).eq(200);\r",
									"\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"created date not empty\", function() {\r",
									"    let created = pm.response.json().created;\r",
									"    pm.expect(created).to.not.equal(\"\");\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carts/{{myCartId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								"{{myCartId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add an item to cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.globals.set(\"myLastItemId\", pm.response.json().itemId);\r",
									"\r",
									"pm.test(\"status code = 201\"),function(){\r",
									"    pm.expect(pm.response.code).eq(201);\r",
									"}\r",
									"pm.test(\"check if the item was successfully added to the cart\",function(){\r",
									"\r",
									"    pm.expect(pm.response.json().created).equal(true);\r",
									"    pm.expect(pm.response.json().itemId).to.not.equal(\"\");\r",
									"\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"productId\":\"4643\",\r\n\"quantity\":5,\r\n\"cartId\":\"{{myCartId}}\"\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/carts/{{myCartId}}/items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								"{{myCartId}}",
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get cart items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code = 200\"),function(){\r",
									"    pm.expect(pm.response.code).eq(200);\r",
									"}\r",
									"pm.test(\"check if items are displayed\",function(){\r",
									"    pm.expect(pm.response).to.not.be.empty;\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/carts/{{myCartId}}/items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								"{{myCartId}}",
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify an item in the cart Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code=204\",function()\r",
									"    {\r",
									"        pm.expect(pm.response.code).eq(204);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"id\": \"{{myLastItemId}}\",\r\n        \"quantity\": 6,\r\n        \"cartId\": \"{{myCartId}}\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/carts/{{myCartId}}/items/{{myLastItemId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								"{{myCartId}}",
								"items",
								"{{myLastItemId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Replace an item in the cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code=204\",function()\r",
									"    {\r",
									"        pm.expect(pm.response.code).eq(204);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"itemid\": \"{{myLastItemId}}\",\r\n        \"quantity\": 2,\r\n        \"cartId\": \"{{myCartId}}\",\r\n        \"productId\":\"2585\"\r\n\r\n\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/carts/{{myCartId}}/items/{{myLastItemId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								"{{myCartId}}",
								"items",
								"{{myLastItemId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an item in the cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"status code=204\",function()\r",
									"    {\r",
									"        pm.expect(pm.response.code).eq(204);\r",
									"    }\r",
									")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"{{myCartId}}\",\r\n        \"productId\":\"2585\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/carts/{{myCartId}}/items/{{myLastItemId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts",
								"{{myCartId}}",
								"items",
								"{{myLastItemId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Create a new order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"{{myCartId}}\",\r\n    \"customerName\": \"John Doe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if response is OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"VÃ©rification du champ 'customerName'\", function () {\r",
									"    var jsonData = pm.response.json()[0];\r",
									"    pm.expect(jsonData).to.have.property('customerName');\r",
									"    pm.expect(jsonData.customerName).to.eql('Wafa Roland');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if response is OK\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Check if response body is not empty\", function () {\r",
									"    pm.response.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"cartId\": \"{{myCartId}}\",\r\n    \"customerName\": \"Wafa Roland\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders/87u0MH5N4u85ug3eve1kM",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"87u0MH5N4u85ug3eve1kM"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if response is OK\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Check if response body is not empty\", function () {\r",
									"    pm.response.to.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders/2KTfjIbFNzBV8aEfjt1st",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"2KTfjIbFNzBV8aEfjt1st"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single order",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders/87u0MH5N4u85ug3eve1kM",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"87u0MH5N4u85ug3eve1kM"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{accessToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "accessToken",
			"value": "2112a822b227640ee7e704d255fbe452339ffc88fa9ee2618aa7e68925d9a46d",
			"type": "string"
		}
	]
}